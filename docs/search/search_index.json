{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"helm-charts  <p>\ud83d\udc4b Welcome to my Helm Charts repository. This repo contains Helm charts that I have developed to run applications in my home Kubernetes cluster. This repo is not intended to be a replacement for any of the large collections of Helm charts that are out there.</p>"},{"location":"#installation","title":"Installation","text":"<p>Helm must be installed to use the charts in this repository.</p> <p>The Helm repository can be installed as follows:</p> <pre><code>helm repo add bjw-s https://bjw-s.github.io/helm-charts\n</code></pre> <p>You can then run <code>helm search repo bjw-s</code> to search the charts.</p>"},{"location":"#docs","title":"\ud83d\udcd6 Docs","text":"<p>The documentation that goes along with this repo can be found over here.</p>"},{"location":"#support","title":"\ud83d\udd0e Support","text":"<p>If you like this project, please consider supporting my work through my GitHub sponsorship page.</p>"},{"location":"#how-do-i-find-people-running-these-charts","title":"How do I find people running these charts?","text":""},{"location":"#discord","title":"Discord","text":"<p>Join the k8s-at-home Discord community on Discord.</p>"},{"location":"#repository-topics","title":"Repository topics","text":"<p>Have a look at people running Kubernetes at home by checking the \"<code>k8s-at-home</code>\" topic on GitHub.</p>"},{"location":"#search","title":"Search","text":"<p>You can use this following search engine provided by @whazor to search for public repositories containing any application you might wish to run.</p>"},{"location":"#license","title":"\ud83d\udd0f License","text":"<p>See LICENSE</p>"},{"location":"app-template/","title":"App Template","text":""},{"location":"app-template/#background","title":"Background","text":"<p>Since Helm library charts cannot be installed directly I have created a companion chart for the common library.</p>"},{"location":"app-template/#usage","title":"Usage","text":"<p>In order to use this template chart, you would deploy it as you would any other Helm chart. By setting the desired values, the common library chart will render the desired resources.</p> <p>Be sure to check out the common library docs and its <code>values.yaml</code> for more information about the available configuration options.</p>"},{"location":"app-template/#examples","title":"Examples","text":"<p>This is an example <code>values.yaml</code> file that would deploy the vaultwarden application. For more deployment examples, check out the <code>examples</code> folder.</p> <pre><code>controllers:\n  main:\n    strategy: Recreate\n\n    containers:\n      main:\n        image:\n          # -- image repository\n          repository: vaultwarden/server\n          # -- image tag\n          # this example is not automatically updated, so be sure to use the latest image\n          tag: 1.25.2\n          # -- image pull policy\n          pullPolicy: IfNotPresent\n\n        # -- environment variables.\n        # See [image docs](https://github.com/dani-garcia/vaultwarden/blob/main/.env.template) for more details.\n        env:\n          # -- Config dir\n          DATA_FOLDER: \"config\"\n\n# -- Configures service settings for the chart.\nservice:\n  main:\n    ports:\n      http:\n        port: 80\n      websocket:\n        enabled: true\n        port: 3012\n\ningress:\n  # -- Enable and configure ingress settings for the chart under this key.\n  main:\n    enabled: true\n    hosts:\n      - host: chart-example.local\n        paths:\n          - path: /\n            pathType: Prefix\n            service:\n              name: main\n              port: http\n          - path: /notifications/hub/negotiate\n            pathType: Prefix\n            service:\n              name: main\n              port: http\n          - path: /notifications/hub\n            pathType: Prefix\n            service:\n              name: main\n              port: websocket\n\n# -- Configure persistence settings for the chart under this key.\npersistence:\n  config:\n    enabled: true\n    type: persistentVolumeClaim\n    accessMode: ReadWriteOnce\n    size: 1Gi\n    mountPath: /config\n</code></pre>"},{"location":"app-template/#upgrade-instructions","title":"Upgrade instructions","text":""},{"location":"app-template/#from-1xx-to-20x","title":"From 1.x.x to 2.0.x","text":"<p>Given the following real-life example values.yaml for app-template v1:</p> Expand <pre><code>image:\n  repository: ghcr.io/onedr0p/sabnzbd\n  tag: latest\n  pullPolicy: IfNotPresent\n\npodSecurityContext:\n  runAsUser: 568\n  runAsGroup: 568\n  fsGroup: 568\n  fsGroupChangePolicy: \"OnRootMismatch\"\n  supplementalGroups:\n    - 65539\n\nservice:\n  main:\n    ports:\n      http:\n        port: 8080\n\ningress:\n  main:\n    enabled: true\n    ingressClassName: \"ingress-nginx\"\n\npersistence:\n  media:\n    enabled: true\n    existingClaim: nas-media\n    mountPath: /data/nas-media\n\nprobes:\n  liveness:\n    enabled: false\n  readiness:\n    enabled: false\n  startup:\n    enabled: false\n</code></pre> <p>The values for app-template v2.x would become this:</p> <pre><code>defaultPodOptions:\n  securityContext:\n    runAsUser: 568\n    runAsGroup: 568\n    fsGroup: 568\n    fsGroupChangePolicy: \"OnRootMismatch\"\n    supplementalGroups:\n      - 65539\n\ncontrollers:\n  main:\n    containers:\n      main:\n        image:\n          repository: ghcr.io/onedr0p/sabnzbd\n          tag: latest\n          pullPolicy: IfNotPresent\n\n        probes:\n          liveness:\n            enabled: false\n          readiness:\n            enabled: false\n          startup:\n            enabled: false\n\nservice:\n  main:\n    ports:\n      http:\n        port: 8080\n\ningress:\n  main:\n    enabled: true\n    className: \"ingress-nginx\"\n\npersistence:\n  media:\n    existingClaim: nas-media\n    globalMounts:\n      - path: /data/nas-media\n</code></pre>"},{"location":"app-template/#changes-in-this-example","title":"Changes in this example","text":"<p>This is not meant as an exhaustive list of changes, but rather a \"most common\" example.</p> <ul> <li><code>podSecurityContext</code> has been moved to <code>defaultPodOptions.securityContext</code>. It is also possible to configure this on a controller-specific basis by moving it to <code>controllers.main.pod.securityContext</code> instead.</li> <li><code>image</code> has been moved to <code>controllers.main.containers.main.image</code> so that multiple containers can be configured.</li> <li><code>ingress.main.ingressClassName</code> has been renamed to <code>ingress.main.className</code>.</li> <li><code>ingress.main.enabled</code> can be removed, since items are considered enabled by default (they can still be disabled by adding <code>enabled: false</code>).</li> <li><code>persistence.media.mountPath</code> has been moved to <code>persistence.media.globalMounts.*.path</code> to allow multiple mountPaths for the same persistence item.</li> <li><code>persistence.media.enabled</code> can be removed, since items are considered enabled by default (they can still be disabled by adding <code>enabled: false</code>).</li> <li><code>probes</code> has been moved to <code>controllers.main.containers.main.probes</code> so that multiple containers can be configured.</li> </ul>"},{"location":"app-template/#source-code","title":"Source code","text":"<p>The source code for the app template chart can be found here.</p>"},{"location":"common-library/","title":"Common Library","text":"<p>Note</p> <p>The Common library chart is not meant to be installed directly, application charts use the Common library as a dependency. See the app template for an example how to deploy it.</p>"},{"location":"common-library/#background","title":"Background","text":"<p>In Helm 3, their team introduced the concept of a Library chart.</p> <p>A library chart is a type of Helm chart that defines chart primitives or definitions which can be shared by Helm templates in other charts. This allows users to share snippets of code that can be re-used across charts, avoiding repetition and keeping charts DRY.</p> <p>The common library was created because I saw many charts requiring only a few select configuration options in their Helm charts.</p> <p>Note</p> <p>Take one of the many applications like <code>sonarr</code> or <code>nzbget</code>. Each of these charts only require setting <code>service</code>, <code>port</code>, <code>persistence</code>, <code>ingress</code> and <code>image</code> since state and app configuration is handled by the application itself.</p> <p>In order to stay somewhat DRY (Don't Repeat Yourself) and keeping with Helm 3 usage for a Library chart, I saw this pattern and decided it was worth it to create a library. This means each one of these app charts has a dependency on what I call the <code>common</code> library.</p>"},{"location":"common-library/#source-code","title":"Source code","text":"<p>The source code for the common library chart can be found here.</p>"},{"location":"common-library/howto/","title":"How to...","text":"<p>Here you can find information on how to accomplish specific scenario's.</p>"},{"location":"common-library/howto/helm-templates/","title":"Helm templates","text":"<p>Some fields in the common library <code>values.yaml</code> allow the use of Helm templates for their values. This is often indicated by a remark similar to <code>Helm template enabled</code> in the field description.</p> <p>This feature allows you to set the value of that key to the output of the given Helm template.</p>"},{"location":"common-library/howto/helm-templates/#example","title":"Example","text":"<p>Given the following <code>values.yaml</code></p> <pre><code>containers:\n  subcleaner:\n    name: subcleaner\n\n    image:\n      repository: k8s.gcr.io/git-sync/git-sync\n      tag: {{.Chart.AppVersion}}\n\n    args:\n      - --repo=https://github.com/KBlixt/subcleaner.git\n      - --branch=master\n      - --depth=1\n      - --root=/add-ons/subcleaner\n</code></pre> <p>This would render as follows:</p> <pre><code>containers:\n  subcleaner:\n    name: subcleaner\n\n    image:\n      repository: k8s.gcr.io/git-sync/git-sync\n      tag: v3.6.2\n\n    args:\n      - --repo=https://github.com/KBlixt/subcleaner.git\n      - --branch=master\n      - --depth=1\n      - --root=/add-ons/subcleaner\n</code></pre>"},{"location":"common-library/howto/multiple-subpath/","title":"Multiple subPaths for 1 volume","text":"<p>It is possible to mount multiple subPaths from the same volume to a container. This can be achieved by specifying <code>subPath</code> with a list instead of a string.</p>"},{"location":"common-library/howto/multiple-subpath/#example","title":"Example","text":"<pre><code>persistence:\n  config:\n    type: configMap\n    name: my-configMap\n    advancedMounts:\n      main: # (1)\n        main: # (2)\n          - path: /data/config.yaml\n            readOnly: false\n            subPath: config.yaml\n          - path: /data/secondConfigFile.yaml\n            readOnly: false\n            subPath: secondConfigFile.yaml\n        second-container: # (3)\n          - path: /appdata/config\n            readOnly: true\n      second-controller: # (4)\n        main: # (5)\n          - path: /data/config.yaml\n            readOnly: false\n            subPath: config.yaml\n</code></pre> <ol> <li>the controller with the \"main\" identifier</li> <li>the container with the \"main\" identifier</li> <li>the container with the \"second-container\" identifier</li> <li>the controller with the \"second-controller\" identifier</li> <li>the container with the \"main\" identifier</li> </ol>"},{"location":"common-library/storage/globalOptions/","title":"Global Options","text":"<p>The following options are available for all persistence types:</p>"},{"location":"common-library/storage/globalOptions/#enabled","title":"enabled","text":"<p>Enables or disables the persistence item. Defaults to <code>true</code>.</p>"},{"location":"common-library/storage/globalOptions/#type","title":"type","text":"<p>Sets the persistence type</p> <p>Valid options are:</p> <ul> <li><code>configMap</code></li> <li><code>custom</code></li> <li><code>emptyDir</code></li> <li><code>hostPath</code></li> <li><code>nfs</code></li> <li><code>persistentVolumeClaim</code></li> <li><code>secret</code></li> </ul>"},{"location":"common-library/storage/globalOptions/#globalmounts","title":"globalMounts","text":"<p>Configure mounts to all controllers and containers. By default the persistence item will be mounted to <code>/&lt;name_of_the_peristence_item&gt;</code>.</p> <p>Example</p> <pre><code>globalMounts:\n  - path: /config\n    readOnly: false\n</code></pre>"},{"location":"common-library/storage/globalOptions/#path","title":"path","text":"<p>Where to mount the volume in the main container. Defaults to <code>/&lt;name_of_the_volume&gt;</code></p>"},{"location":"common-library/storage/globalOptions/#readonly","title":"readOnly","text":"<p>Specify if the volume should be mounted read-only</p>"},{"location":"common-library/storage/globalOptions/#subpath","title":"subPath","text":"<p>Specifies a sub-path inside the referenced volume instead of its root.</p>"},{"location":"common-library/storage/globalOptions/#advancedmounts","title":"advancedMounts","text":"<p>Explicitly configure mounts for specific controllers and containers.</p> <p>Example</p> <pre><code>advancedMounts:\n  main: # (1)\n    main: # (2)\n      - path: /data/config.yaml\n        readOnly: true\n        subPath: config.yaml\n    second-container: # (3)\n      - path: /appdata/config\n        readOnly: true\n\n  second-controller: # (4)\n    main: # (5)\n      - path: /data/config.yaml\n        readOnly: false\n        subPath: config.yaml\n</code></pre> <ol> <li>the controller with the \"main\" identifier</li> <li>the container with the \"main\" identifier</li> <li>the container with the \"second-container\" identifier</li> <li>the controller with the \"second-controller\" identifier</li> <li>the container with the \"main\" identifier</li> </ol>"},{"location":"common-library/storage/globalOptions/#path_1","title":"path","text":"<p>Where to mount the volume in the main container. Defaults to <code>/&lt;name_of_the_volume&gt;</code></p>"},{"location":"common-library/storage/globalOptions/#readonly_1","title":"readOnly","text":"<p>Specify if the volume should be mounted read-only</p>"},{"location":"common-library/storage/globalOptions/#subpath_1","title":"subPath","text":"<p>Specifies a sub-path inside the referenced volume instead of its root.</p>"},{"location":"common-library/storage/permissions/","title":"Permissions","text":"<p>Charts do not modify file or folder permissions on volumes out of the box.</p> <p>This means that you will have to make sure that your storage can be written to by the application.</p>"},{"location":"common-library/storage/types/configmap/","title":"ConfigMap","text":"<p>In order to mount a configMap to a mount point within the Pod you can use the <code>configMap</code> type persistence item.</p> Field Mandatory Docs / Description <code>name</code> Yes Which configMap should be mounted. Supports Helm templating. <code>defaultMode</code> No The default file access permission bit. <code>items</code> No Specify item-specific configuration. Will be passed 1:1 to the volumeSpec. <p>Note</p> <p>Even if not specified, the configMap will be read-only.</p>"},{"location":"common-library/storage/types/configmap/#minimal-configuration","title":"Minimal configuration","text":"<pre><code>persistence:\n  config:\n    enabled: true\n    type: configMap\n    name: mySettings\n</code></pre> <p>This will mount the contents of the pre-existing <code>mySettings</code> configMap to <code>/config</code>.</p>"},{"location":"common-library/storage/types/custom/","title":"Custom","text":"<p>When you wish to specify a custom volume, you can use the <code>custom</code> type. This can be used for example to mount configMap or Secret objects.</p> <p>See the Kubernetes docs for more information.</p> Field Mandatory Docs / Description <code>volumeSpec</code> Yes Define the raw Volume spec here."},{"location":"common-library/storage/types/custom/#minimal-configuration","title":"Minimal configuration","text":"<pre><code>persistence:\n  config:\n    enabled: true\n    type: custom\n    volumeSpec:\n      downwardAPI:\n        items:\n          - path: \"labels\"\n            fieldRef:\n              fieldPath: metadata.labels\n          - path: \"annotations\"\n            fieldRef:\n              fieldPath: metadata.annotations\n</code></pre>"},{"location":"common-library/storage/types/emptyDir/","title":"Empty Dir","text":"<p>Sometimes you need to share some data between containers, or need some scratch space. That is where an emptyDir can come in.</p> <p>See the Kubernetes docs for more information.</p> Field Mandatory Docs / Description <code>medium</code> No Set this to <code>Memory</code> to mount a tmpfs (RAM-backed filesystem) instead of the storage medium that backs the node. <code>sizeLimit</code> No If the <code>SizeMemoryBackedVolumes</code> feature gate is enabled, you can specify a size for memory backed volumes."},{"location":"common-library/storage/types/emptyDir/#minimal-configuration","title":"Minimal configuration","text":"<pre><code>persistence:\n  config:\n    enabled: true\n    type: emptyDir\n</code></pre> <p>This will create an ephemeral emptyDir volume and mount it to <code>/config</code>.</p>"},{"location":"common-library/storage/types/hostPath/","title":"Host path","text":"<p>In order to mount a path from the node where the Pod is running you can use a <code>hostPath</code> type persistence item.</p> <p>This can also be used to mount an attached USB device to a Pod. Note that this will most likely also require setting an elevated <code>securityContext</code>.</p> <p>See the Kubernetes docs for more information.</p> Field Mandatory Docs / Description <code>hostPath</code> Yes Which path on the host should be mounted. <code>hostPathType</code> No Specifying a hostPathType adds a check before trying to mount the path. See Kubernetes documentation for options."},{"location":"common-library/storage/types/hostPath/#minimal-configuration","title":"Minimal configuration","text":"<pre><code>persistence:\n  config:\n    enabled: true\n    type: hostPath\n    hostPath: /dev\n</code></pre> <p>This will mount the <code>/dev</code> folder from the underlying host to <code>/dev</code> in the container.</p>"},{"location":"common-library/storage/types/nfs-share/","title":"NFS Share","text":"<p>To mount an NFS share to your Pod you can either pre-create a persistentVolumeClaim referring to it, or you can specify an inline NFS volume:</p> <p>Note</p> <p>Mounting an NFS share this way does not allow for specifying mount options. If you require these, you must create a PVC to mount the share.</p> Field Mandatory Docs / Description <code>server</code> Yes Host name or IP address of the NFS server. <code>path</code> Yes The path on the server to mount."},{"location":"common-library/storage/types/nfs-share/#minimal-configuration","title":"Minimal configuration","text":"<pre><code>persistence:\n  config:\n    enabled: true\n    type: nfs\n    server: 10.10.0.8\n    path: /tank/nas/library\n</code></pre> <p>This will mount the NFS share <code>/tank/nas/library</code> on server <code>10.10.0.8</code> to <code>/config</code>.</p>"},{"location":"common-library/storage/types/persistentVolumeClaim/","title":"Persistent Volume Claim","text":"<p>This is probably the most common storage type, therefore it is also the default when no <code>type</code> is specified.</p> <p>It can be attached in two ways.</p> <ul> <li>Dynamically provisioned</li> <li>Existing claim</li> </ul>"},{"location":"common-library/storage/types/persistentVolumeClaim/#dynamically-provisioned","title":"Dynamically provisioned","text":"<p>Charts can be configured to create the required persistentVolumeClaim manifests on the fly.</p> Field Mandatory Docs / Description <code>accessMode</code> Yes link <code>size</code> Yes link <code>nameOverride</code> No Override the name suffix that is used for this volume. <code>storageClass</code> No Storage class to use for this volume. <code>retain</code> No Set to true to retain the PVC upon <code>helm uninstall</code>."},{"location":"common-library/storage/types/persistentVolumeClaim/#minimal-configuration","title":"Minimal configuration","text":"<pre><code>persistence:\n  config:\n    enabled: true\n    type: persistentVolumeClaim\n    accessMode: ReadWriteOnce\n    size: 1Gi\n</code></pre> <p>This will create a 1Gi RWO PVC named <code>RELEASE-NAME-config</code> with the default storageClass, which will mount to <code>/config</code>.</p>"},{"location":"common-library/storage/types/persistentVolumeClaim/#existing-claim","title":"Existing claim","text":"<p>Charts can be configured to attach to a pre-existing persistentVolumeClaim.</p> Field Mandatory Docs / Description <code>existingClaim</code> Yes Name of the existing PVC <code>nameOverride</code> No Override the name suffix that is used for this volume."},{"location":"common-library/storage/types/persistentVolumeClaim/#minimal-configuration_1","title":"Minimal configuration","text":"<pre><code>persistence:\n  config:\n    enabled: true\n    type: persistentVolumeClaim\n    existingClaim: myAppData\n</code></pre> <p>This will mount an existing PVC named <code>myAppData</code> to <code>/config</code>.</p>"},{"location":"common-library/storage/types/secret/","title":"Secret","text":"<p>In order to mount a Secret to a mount point within the Pod you can use the <code>secret</code> type persistence item.</p> Field Mandatory Docs / Description <code>name</code> Yes Which Secret should be mounted. Supports Helm templating. <code>defaultMode</code> No The default file access permission bit. <code>items</code> No Specify item-specific configuration. Will be passed 1:1 to the volumeSpec. <p>Note</p> <p>Even if not specified, the Secret will be read-only.</p>"},{"location":"common-library/storage/types/secret/#minimal-configuration","title":"Minimal configuration","text":"<pre><code>persistence:\n  config:\n    enabled: true\n    type: secret\n    name: mySecret\n</code></pre> <p>This will mount the contents of the pre-existing <code>mySecret</code> Secret to <code>/config</code>.</p>"}]}